{"ast":null,"code":"import axios from 'axios';\nimport API_CONFIG from '../config/api';\nconst api = axios.create({\n  baseURL: API_CONFIG.BASE_URL,\n  timeout: API_CONFIG.TIMEOUT,\n  headers: API_CONFIG.HEADERS\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(config => {\n  console.log('API Request:', {\n    method: config.method,\n    url: config.url,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for debugging\napi.interceptors.response.use(response => {\n  console.log('API Response:', {\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('API Response Error:', {\n    message: error.message,\n    response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n    status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n  });\n  return Promise.reject(error);\n});\n\n// Trip API calls\nexport const tripApi = {\n  getTrips: () => api.get('/trips'),\n  getTrip: id => api.get(`/trips/${id}`),\n  createTrip: tripData => api.post('/trips', tripData),\n  updateTrip: (id, tripData) => api.put(`/trips/${id}`, tripData),\n  deleteTrip: id => api.delete(`/trips/${id}`)\n};\n\n// Auth API calls\nexport const authApi = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// Interceptor for adding auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Interceptor for handling auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response3;\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_CONFIG","api","create","baseURL","BASE_URL","timeout","TIMEOUT","headers","HEADERS","interceptors","request","use","config","console","log","method","url","data","error","Promise","reject","response","status","_error$response","_error$response2","message","tripApi","getTrips","get","getTrip","id","createTrip","tripData","post","updateTrip","put","deleteTrip","delete","authApi","login","credentials","register","userData","getCurrentUser","token","localStorage","getItem","Authorization","_error$response3","removeItem","window","location","href"],"sources":["/Users/mukeshjoshi/gitprojects/PlanningApp/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport API_CONFIG from '../config/api';\n\nconst api = axios.create({\n  baseURL: API_CONFIG.BASE_URL,\n  timeout: API_CONFIG.TIMEOUT,\n  headers: API_CONFIG.HEADERS,\n});\n\n// Add request interceptor for debugging\napi.interceptors.request.use(\n  (config) => {\n    console.log('API Request:', {\n      method: config.method,\n      url: config.url,\n      data: config.data,\n    });\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for debugging\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Response:', {\n      status: response.status,\n      data: response.data,\n    });\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status,\n    });\n    return Promise.reject(error);\n  }\n);\n\n// Trip API calls\nexport const tripApi = {\n  getTrips: () => api.get('/trips'),\n  getTrip: (id: string) => api.get(`/trips/${id}`),\n  createTrip: (tripData: any) => api.post('/trips', tripData),\n  updateTrip: (id: string, tripData: any) => api.put(`/trips/${id}`, tripData),\n  deleteTrip: (id: string) => api.delete(`/trips/${id}`),\n};\n\n// Auth API calls\nexport const authApi = {\n  login: (credentials: { email: string; password: string }) => \n    api.post('/auth/login', credentials),\n  register: (userData: { name: string; email: string; password: string }) => \n    api.post('/auth/register', userData),\n  getCurrentUser: () => api.get('/auth/me'),\n};\n\n// Interceptor for adding auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Interceptor for handling auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}